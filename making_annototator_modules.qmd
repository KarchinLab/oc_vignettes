---
title: "Making an Annotator Module"
format: html
---

## Annotator Basic Structure

<iframe src="https://share.descript.com/embed/TybKsmLT2Rx" width="640" height="360" frameborder="0" allowfullscreen></iframe>

```{mermaid}
flowchart LR
  A[oc new annotator sift] --> B
  B["sift.py\n(queries data file)"]
  A --> C["sift.yml\n(Maps variants to annotation)"]
  A --> D["data/sift.sqlite\n(contains annotation table)"]
```

```
/Users/Shared/open-cravat/modules/annotators/sift
├── __pycache__
│   └── sift.cpython-310.pyc
├── data
│   └── sift.sqlite               ## contains annotations in sqlite format
├── sift.md                       ## describes how to use annotator
├── sift.py                       ## maps annotation columns to variant input
└── sift.yml                      ## configures output columns

3 directories, 5 files
```


```{bash}
oc config md
```

```{bash}
#| eval: false
oc new annotator sift_annotator
```

```
Annotator sift_annotator created at /Users/Shared/open-cravat/modules/annotators/sift_annotator
```

```{bash}
tree  /Users/Shared/open-cravat/modules/annotators/sift_annotator/
```

```
/Users/Shared/open-cravat/modules/annotators/sift_annotator/
├── __pycache__
│   └── sift_annotator.cpython-311.pyc
├── data
│   └── sift_annotator.sqlite
├── sift_annotator.md
├── sift_annotator.py
└── sift_annotator.yml

3 directories, 5 files
```

## Fetching our SQLite annotations

<iframe src="https://share.descript.com/embed/i8O7qSP87s4" width="640" height="360" frameborder="0" allowfullscreen></iframe>

## Navigate to directory

```{bash}
wget "https://github.com/KarchinLab/open-cravat-modules-karchinlab/blob/master/annotators/example/data/example.sqlite?raw=true"
```


```{bash}
sqlite3 /Users/Shared/open-cravat/modules/annotators/sift_annotator/data/sift_annotator.sqlite 'select * from sift limit 10;'
```


## Fill out `sift_annotator.py`

```{mermaid}
flowchart LR
  A[sift_annotator.py] --method-->B["setup()"]
  A --method-->C["annotate()"]
  A --method-->D["cleanup()"]
```

```{bash}
cat /Users/Shared/open-cravat/modules/annotators/sift_annotator/sift_annotator.py
```

### `annotate()` function

```python
def annotate(self, input_data, secondary_data=None):
    chrom = input_data['chrom']
    pos = input_data['pos']
    ref_base = input_data['ref_base']
    alt_base = input_data['alt_base']
    query = f'select score, nseq from sift where chrom="{chrom}" and pos={pos} and ref="{ref_base}" and alt="{alt_base}";'
    self.cursor.execute(query)
    result = self.cursor.fetchone()
    if result is not None:
        score = result[0]
        num_seq = result[1]
        if score <= 0.05:
            prediction = 'Damaging'
        else:
            prediction = 'Tolerated'
        return {
            'score': score,
            'seq_count': num_seq,
            'prediction': prediction,
        }
    else:
        return None
```


## Configure `sift_annotator.yml`

```{bash}
#| eval: false
cat /Users/Shared/open-cravat/modules/annotators/sift_annotator/sift_annotator.yml
```

```
# 'title' is the name of the module that will be displayed to the user
title: Annotator Template

# 'version' is the version of the annotator. It is primarily used when 
# publishing a module, but is required for all modules.
version: 0.0.1

# 'type' is the type of module described by this .yml file. In this case it is
# 'annotator'
type: annotator

# 'level' is 'variant' or 'gene'
level: variant

# output_columns has the columns that will be included in the output file.
# The columns are defined in a list. Each column has three required keys:
# name, title, and type.
output_columns:
  # name is the internal name and is the key used to identify the column in the
  # dictionary returned by the annotate method of annotator_name.py
- name: placeholder_annotation
  # title is the display name of this column, similar to the title of the module.
  # It can be changed without affecting the functionality of CRAVAT
  title: Placeholder Annotation
  # type is the data type of the value. It is primarily used when storing the 
  # results in a database. It may be one of string, int, or float.
  type: string

# description is a short description of what the annotator does. Try to limit it
# to around 80 characters.
description: Template annotator. If you see this description in production, someone is wrong.

# developer is you!
developer:
  name: ''
  organization: ''
  email: ''
  website: ''
  citation: ''
```

After filling it out and cleaning it up, your `sift_annotator.yml` should look like this:

```
title: Sift Annotator
version: 0.0.1
type: annotator
level: variant

output_columns:
- name: prediction
  title: Prediction
  type: string
- name: score
  title: Score
  type: float
- name: seq_count
  title: Seqs at Position
  type: int

description: Annotates variants with sift scores and categories

[....]
```



## Test it out!



## Requirements for publishing in the OpenCravat store


